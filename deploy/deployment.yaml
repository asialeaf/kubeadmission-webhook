apiVersion: v1
kind: ServiceAccount
metadata:
  name: admission-registry-sa

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: admission-registry-clusterrole
rules:
  - apiGroups: ["admissionregistration.k8s.io"]
    resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
    verbs: ["get", "list", "watch", "create", "update"]
  # Rules below is used generate admission service secret
  - apiGroups: ["certificates.k8s.io"]
    resources: ["certificatesigningrequests"]
    verbs: ["get", "list", "create", "delete"]
  - apiGroups: ["certificates.k8s.io"]
    resources: ["certificatesigningrequests/approval"]
    verbs: ["create", "update"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create", "get", "patch"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admission-registry-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admission-registry-clusterrole
subjects:
  - kind: ServiceAccount
    name: admission-registry-sa
    namespace: default

---
apiVersion: v1
data:
  config.json: |
    [
        {
            "namespace": "default",
            "name": "nginx-test",
            "mixed": true,
            "priority": 102
        },
        {
            "namespace": "devops",
            "name": "busybox-test",
            "mixed": false,
            "priority": 89
        }
    ]
kind: ConfigMap
metadata:
  name: admission-registry-config
  namespace: default

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admission-registry
  labels:
    app: admission-registry
spec:
  selector:
    matchLabels:
      app: admission-registry
  template:
    metadata:
      labels:
        app: admission-registry
    spec:
      serviceAccountName: admission-registry-sa
      containers:
      - args:
        - --web.listen-address=:8443
        - --config.file=/etc/webhook/config/config.json
        - --tls.cert-file=/etc/webhook/certs/tls.crt
        - --tls.private-key-file=/etc/webhook/certs/tls.key
        - --web.enable-lifecycle
        name: kubeadmission-webhook
        image: kubeadmission-webhook:v1.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: webhook-https
          protocol: TCP
          containerPort: 8443
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/healthy
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/ready
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 2
            memory: 1Gi      
          requests:
            cpu: 1
            memory: 500Mi 
        volumeMounts:
        - name: webhook-certs
          mountPath: /etc/webhook/certs
          readOnly: true
        - mountPath: /etc/webhook/config
          name: admission-certs
          readOnly: true
      restartPolicy: Always
      nodeSelector: 
        kubernetes.io/hostname: k8s-master
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - name: admission-certs
        secret:
          defaultMode: 420
          secretName: admission-registry-secret
      - configMap:
          defaultMode: 420
          name: admission-registry-config
        name: config
---
apiVersion: v1
kind: Service
metadata:
  name: admission-registry
  labels:
    app: admission-registry
spec:
  ports:
    - port: 443
      targetPort: 8443
  selector:
    app: admission-registry